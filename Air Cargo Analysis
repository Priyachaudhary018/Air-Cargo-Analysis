create database Air_Cargo;
show databases ;
use air_cargo;
/*⦁	Write a query to create a route_details table using suitable data types for the fields,
such as route_id, flight_num, origin_airport, destination_airport, aircraft_id, and distance_miles.
Implement the check constraint for the flight number and unique constraint for the route_id fields. 
Also, make sure that the distance miles field is greater than 0. */


CREATE TABLE route_details (
    route_id INT PRIMARY KEY,
    flight_num VARCHAR(10) NOT NULL CHECK (flight_num REGEXP '^[A-Z]{2}[0-9]{3,4}$'),
    origin_airport VARCHAR(3) NOT NULL,
    destination_airport VARCHAR(3) NOT NULL,
    aircraft_id INT,
    distance_miles INT NOT NULL CHECK (distance_miles > 0),
    UNIQUE (route_id)
);

/*⦁	Write a query to display all the passengers (customers) who have travelled in routes 01 to 25. Take data from the passengers_on_flights table.
*/

select * from passengers_on_flights
where route_id between 01 and 25 ;


/*⦁	Write a query to identify the number of passengers and total revenue in business class from the ticket_details table.
*/


select 
count(customer_id) as Number_of_passengers,
sum(Price_per_ticket ) as Total_Revenue
from ticket_details
where class_id = 'Bussiness' ;


/*⦁	Write a query to display the full name of the customer by extracting the first name and last name from the customer table.
*/

select 
concat(first_name,'', last_name) as 'Full Name'
from customer ;


/*⦁	Write a query to extract the customers who have registered and booked a ticket. Use data from the customer and ticket_details tables.*/

Select c.customer_id, c.first_name, c.last_name, c.date_of_birth, c.gender
from customer c
inner join ticket_details t on c.customer_id = t.customer_id;



/*⦁	Write a query to identify the customer’s first name and last name based on their customer ID and brand (Emirates) from the ticket_details table.*/


select c.customer_id, c.first_name, c.last_name from customer c
join ticket_details t on c.customer_id =t.customer_id
where t.brand = 'Emirates'
order by customer_id, Brand;

/*⦁	Write a query to identify the customers who have travelled by Economy Plus class using Group By and Having clause on the passengers_on_flights table. */

select customer_id
from passengers_on_flights
where class_id = 'Economy Plus'
group by customer_id
having count(*) > 0 ;


/*⦁	Write a query to identify whether the revenue has crossed 10000 using the IF clause on the ticket_details table.*/

select 
if(sum(Price_per_ticket) > 10000, 'Revenue has crossed 10000', 'Revenue is below 10000') as Revenue_Status
from ticket_details ; 

/*⦁	Write a query to create and grant access to a new user to perform operations on a database.*/

CREATE USER 'AD'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON *.* TO 'AD'@'localhost' WITH GRANT OPTION;

/*⦁	Write a query to extract the passengers whose route ID is 4 by improving the speed and performance of the passengers_on_flights table.*/


select customer from passengers_on_flights 
where route_id = '4';



/*For the route ID 4, write a query to view the execution plan of the passengers_on_flights table.*/

select * from passengers_on_flights
where route_id = '4' ;

/*⦁	Write a query to calculate the total price of all tickets booked by a customer across different aircraft IDs using rollup function. */

select customer_id, aircraft_id, sum(Price_per_ticket) as Total_Price
from ticket_details
group by customer_id, aircraft_id with rollup ;

/*⦁	Write a query to create a view with only business class customers along with the brand of airlines. */

CREATE VIEW business_class_customer AS
SELECT DISTINCT
    customer_id,
    brand
FROM
    ticket_details
WHERE
    class_id = 'Bussiness';
    
SELECT *
FROM business_class_customer;
